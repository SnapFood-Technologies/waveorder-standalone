name: Deploy to self-hosted

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node LTS
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm ci

      - name: Build
        env:
          # Database
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          
          # Auth
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          
          # APIs
          AKISMET_API_KEY: ${{ secrets.AKISMET_API_KEY }}
          BKT_API_KEY: ${{ secrets.BKT_API_KEY }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
          PAYPAL_CLIENT_ID: ${{ secrets.PAYPAL_CLIENT_ID }}
          
          # Public variables (these will be embedded in the client-side code)
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_CLARITY_ID: ${{ secrets.NEXT_PUBLIC_CLARITY_ID }}
          NEXT_PUBLIC_GA_ID: ${{ secrets.NEXT_PUBLIC_GA_ID }}
          
          # Email addresses
          CONTACT_EMAIL: ${{ secrets.CONTACT_EMAIL }}
          EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
          LEGAL_EMAIL: ${{ secrets.LEGAL_EMAIL }}
          PRIVACY_EMAIL: ${{ secrets.PRIVACY_EMAIL }}
          
          # Build environment
          NODE_ENV: production
        run: npm run build

      - name: Prune dev deps (optional)
        run: npm prune --production

      # Create .env.production file with all required variables
      - name: Write .env.production
        run: |
          cat > .env.production <<'EOF'
          NODE_ENV=production
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
          NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          AKISMET_API_KEY=${{ secrets.AKISMET_API_KEY }}
          BKT_API_KEY=${{ secrets.BKT_API_KEY }}
          RESEND_API_KEY=${{ secrets.RESEND_API_KEY }}
          PAYPAL_CLIENT_ID=${{ secrets.PAYPAL_CLIENT_ID }}
          NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_CLARITY_ID=${{ secrets.NEXT_PUBLIC_CLARITY_ID }}
          NEXT_PUBLIC_GA_ID=${{ secrets.NEXT_PUBLIC_GA_ID }}
          CONTACT_EMAIL=${{ secrets.CONTACT_EMAIL }}
          EMAIL_FROM=${{ secrets.EMAIL_FROM }}
          LEGAL_EMAIL=${{ secrets.LEGAL_EMAIL }}
          PRIVACY_EMAIL=${{ secrets.PRIVACY_EMAIL }}
          EOF

      - name: Ensure PM2 installed (in case)
        run: npm install -g pm2

      - name: Start or Restart with PM2
        run: |
          # start if not running; otherwise reload. Use your start script name.
          if pm2 list | grep -q "my-next-app"; then
            pm2 reload my-next-app || pm2 restart my-next-app
          else
            pm2 start npm --name "my-next-app" -- start
          fi
          pm2 save